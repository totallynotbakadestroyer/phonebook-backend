{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/PersonsService.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","filterName","handleFilterChange","value","onChange","PersonForm","newName","addName","newNumber","handleNameChange","handlePhoneChange","onClick","type","SinglePerson","person","deletePerson","name","number","Persons","personsToShow","map","id","baseUrl","axios","get","then","response","data","post","delete","put","Notification","notification","className","message","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","setNotification","generateNotification","setTimeout","updatePerson","window","confirm","personsService","personsCopy","console","log","findIndex","e","catch","filter","useEffect","toLowerCase","startsWith","event","target","preventDefault","some","alert","find","concat","x","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e57e5f7a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filterName, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with\n      <input value={filterName} onChange={handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  newName,\n  addName,\n  newNumber,\n  handleNameChange,\n  handlePhoneChange,\n}) => {\n  return (\n    <div>\n      <form>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handlePhoneChange} />\n        </div>\n        <div>\n          <button onClick={addName} type=\"submit\">\n            add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default PersonForm;\n","import React from \"react\";\n\nconst SinglePerson = ({ person, deletePerson }) => {\n  return (\n    <div>\n      <p key={person.name}>\n        {person.name} {person.number}\n        <button onClick={() => deletePerson(person)}>delete</button>\n      </p>\n    </div>\n  );\n};\n\nconst Persons = ({ personsToShow, deletePerson }) => {\n  return (\n    <div>\n      {personsToShow.map((person) => (\n        <SinglePerson deletePerson={deletePerson} key={person.id} person={person} />\n      ))}\n    </div>\n  );\n};\nexport default Persons;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst newPerson = (person) => {\n  const request = axios.post(baseUrl, person);\n  return request.then((response) => response.data);\n};\n\nconst updatePerson = (id, person) => {\n  const request = axios.put(`${baseUrl}/${id}`, person);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (person) => {\n  return axios.delete(`${baseUrl}/${person.id}`);\n};\n\nexport default { getAll, newPerson, deletePerson, updatePerson };\n","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n  return <div className={notification.type}>{notification.message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personsService from \"./services/PersonsService\";\nimport Notification from \"./components/Notification.js\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [notification, setNotification] = useState({});\n\n  const fetchPersons = () => {\n    personsService.getAll().then((response) => setPersons(response));\n  };\n\n  const addName = (event) => {\n    event.preventDefault();\n    const person = { name: newName, number: newNumber };\n    if (persons.some((e) => e.name === newName && e.number === newNumber)) {\n      alert(`${newName} is already added to phonebook`);\n    } else if (persons.some((e) => e.name === newName)) {\n      updatePerson(persons.find((e) => e.name === newName).id, person);\n    } else {\n      setNewName(\"\");\n      setNewNumber(\"\");\n      personsService\n        .newPerson(person)\n        .then((response) => {\n          generateNotification(\n            `${person.name} has been successfully added to phonebook`,\n            \"success\"\n          );\n          setPersons(persons.concat(response));\n        })\n        .catch(() => {\n          generateNotification(\n            `Information of ${person.name} has already been removed from server`,\n            \"error\"\n          );\n          setPersons(persons.filter((e) => e.name !== person.name));\n        });\n    }\n  };\n\n  const generateNotification = (message, type) => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const updatePerson = (id, person) => {\n    if (\n      window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      )\n    ) {\n      setNewName(\"\");\n      setNewNumber(\"\");\n      personsService\n        .updatePerson(id, person)\n        .then((response) => {\n          const personsCopy = [...persons];\n          console.log(response);\n          personsCopy[\n            personsCopy.findIndex((e) => e.name === response.name)\n          ] = response;\n          generateNotification(\n            `Information of ${person.name} has been successfully updated`,\n            \"success\"\n          );\n          setPersons(personsCopy);\n        })\n        .catch(() => {\n          generateNotification(\n            `Information of ${person.name} has already been removed from server`,\n            \"error\"\n          );\n          setPersons(persons.filter((e) => e.name !== person.name));\n        });\n    }\n  };\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService\n        .deletePerson(person)\n        .then(() => {\n          generateNotification(\n            `Information of ${person.name} has been successfully deleted`,\n            \"success\"\n          );\n          setPersons(persons.filter((x) => x.id !== person.id));\n        })\n        .catch(() => {\n          generateNotification(\n            `Information of ${person.name} has already been removed from server`,\n            \"error\"\n          );\n          setPersons(persons.filter((e) => e.name !== person.name));\n        });\n    }\n  };\n\n  useEffect(fetchPersons, []);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handlePhoneChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const personsToShow = filterName\n    ? persons.filter((person) =>\n        person.name.toLowerCase().startsWith(filterName.toLowerCase())\n      )\n    : persons;\n\n  return (\n    <div>\n      <div>\n        <h2>Phonebook</h2>\n        <Notification notification={notification} />\n        <Filter\n          handleFilterChange={handleFilterChange}\n          filterName={filterName}\n        />\n      </div>\n      <div>\n        <h2>add a new</h2>\n        <PersonForm\n          addName={addName}\n          handleNameChange={handleNameChange}\n          handlePhoneChange={handlePhoneChange}\n          newName={newName}\n          newNumber={newNumber}\n        />\n      </div>\n      <h2>Numbers</h2>\n      <Persons deletePerson={deletePerson} personsToShow={personsToShow} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}